{"version":3,"sources":["components/Cards.jsx","components/Charts.jsx","components/Loading.jsx","components/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Cards","props","Grid","container","spacing","direction","justify","alignItems","item","xs","className","Paper","elevation","style","color","confirm","active","recovered","deaths","Charts","data","labels","datasets","label","backgroundColor","borderColor","useStyles","makeStyles","theme","root","width","marginTop","LinearIndeterminate","classes","LinearProgress","Home","useState","statedata","setStatedata","useEffect","axios","get","then","result","status","statewise","catch","error","console","massage","log","length","align-items","md","confirmed","padding","sm","TableContainer","component","Table","stickyHeader","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","object","index","scope","state","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kWAwCeA,EApCD,SAACC,GACX,OACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAMC,QAAQ,SAASC,WAAW,SAAxE,UAEI,cAACL,EAAA,EAAD,CAAOM,MAAI,EAACC,IAAE,EAACL,QAAS,EAAGM,UAAU,YAArC,SACI,eAACC,EAAA,EAAD,CAAOD,UAAU,yBAAyBE,UAAW,EAArD,UACI,mBAAGF,UAAU,gBAAb,uBACA,oBAAIG,MAAO,CAACC,MAAM,WAAlB,SAA+Bb,EAAMc,eAI7C,cAACb,EAAA,EAAD,CAAOM,MAAI,EAACC,IAAE,EAACL,QAAS,EAAxB,SACI,eAACO,EAAA,EAAD,CAAOD,UAAU,wBAAwBE,UAAW,EAApD,UACI,mBAAGF,UAAU,gBAAb,oBACA,oBAAIG,MAAO,CAACC,MAAM,WAAlB,SAA+Bb,EAAMe,cAI7C,cAACd,EAAA,EAAD,CAAOM,MAAI,EAACC,IAAE,EAACL,QAAS,EAAxB,SACI,eAACO,EAAA,EAAD,CAAOD,UAAU,2BAA2BE,UAAW,EAAvD,UACA,mBAAGF,UAAU,gBAAb,uBACA,oBAAIG,MAAO,CAACC,MAAM,WAAlB,SAA+Bb,EAAMgB,iBAIzC,cAACf,EAAA,EAAD,CAAOM,MAAI,EAACC,IAAE,EAACL,QAAS,EAAxB,SACI,eAACO,EAAA,EAAD,CAAOD,UAAU,uBAAuBE,UAAW,EAAnD,UACA,mBAAGF,UAAU,gBAAb,oBACA,oBAAIG,MAAO,CAACC,MAAM,WAAlB,SAA+Bb,EAAMiB,kB,QCJtCC,EAzBA,SAAClB,GACZ,OACI,qBAAKS,UAAU,gBAAf,SAEQ,cAAC,IAAD,CACAU,KAAM,CACFC,OAAQ,CAAC,SAAU,YAAa,QAAS,aACzCC,SAAS,CAAC,CACNC,MAAM,SACNH,KAAK,CAACnB,EAAMe,OAAOf,EAAMc,QAAQd,EAAMiB,OAAOjB,EAAMgB,WACpDO,gBAAgB,CAAC,UAAU,UAAU,UAAU,WAC/CC,YAAY,CAAC,UAAU,UAAU,UAAU,mB,mCCV7DC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,MAAO,OACP,YAAa,CACXC,UAAWH,EAAMxB,QAAQ,SAKhB,SAAS4B,IACtB,IAAMC,EAAUP,IAEhB,OACE,qBAAKhB,UAAWuB,EAAQJ,KAAxB,SACE,cAACK,EAAA,EAAD,MCyFSC,MAlGf,WAAiB,IAAD,EAEmBC,mBAAS,IAF5B,mBAELC,EAFK,KAEKC,EAFL,KA2BZ,OALAC,qBAAU,WAjBNC,IAAMC,IAPA,0CAQDC,MAAK,SAACC,GAEH,GAAqB,MAAlBA,EAAOC,QAA4B,MAAVD,EAMxB,MAAO,GALP,IAAIvB,EAAKuB,EAAOvB,KAAKyB,UACrBP,EAAalB,MAOpB0B,OAAM,SAACC,GACJC,QAAQD,MAAMA,EAAME,YAM5BD,QAAQE,IAAIb,KACb,IAGC,sBAAK3B,UAAU,OAAf,UACI,oBAAIA,UAAU,yBAAd,qCAEuB,IAAnB2B,EAAUc,OACN,qBAAKzC,UAAU,YAAf,SACI,cAAC,EAAD,MAIJ,qBAAKA,UAAU,YAAf,SACA,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,OAAOC,QAAQ,SAAS8C,cAAY,SAA1E,UACI,cAAClD,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAI4C,GAAI,EAAG3C,UAAU,YAApC,SAEI,cAAC,EAAD,CACIM,OAAQqB,EAAU,GAAGrB,OACrBC,UAAWoB,EAAU,GAAGpB,UACxBC,OAAQmB,EAAU,GAAGnB,OACrBH,QAASsB,EAAU,GAAGiB,cAI9B,cAACpD,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAI4C,GAAI,EAAG3C,UAAU,oBAAoBG,MAAO,CAAC0C,QAAQ,IAAxE,SACI,cAAC,EAAD,CACIvC,OAAQqB,EAAU,GAAGrB,OACrBC,UAAWoB,EAAU,GAAGpB,UACxBC,OAAQmB,EAAU,GAAGnB,OACrBH,QAASsB,EAAU,GAAGiB,cAI9B,cAACpD,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAMC,QAAQ,SAChDC,WAAW,SAASG,UAAU,0BADlC,SAGY,cAACR,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAAI4C,GAAI,GAAIG,GAAI,GAAI9C,UAAU,kBAA7C,SACA,cAAC+C,EAAA,EAAD,CAAgBC,UAAW/C,IAAOD,UAAU,QAA5C,SACI,eAACiD,EAAA,EAAD,CAAOC,cAAY,EAAClD,UAAU,GAAGmD,aAAW,eAA5C,UACI,cAACC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAUrD,UAAU,gBAApB,UACI,cAACsD,EAAA,EAAD,CAAWtD,UAAU,WAAWG,MAAO,CAACW,gBAAgB,WAAxD,mBACA,cAACwC,EAAA,EAAD,CAAWtD,UAAU,YAAYG,MAAO,CAACW,gBAAgB,WAAYyC,MAAM,QAA3E,mBACA,cAACD,EAAA,EAAD,CAAWtD,UAAU,WAAWG,MAAO,CAACW,gBAAgB,WAAYyC,MAAM,QAA1E,uBACA,cAACD,EAAA,EAAD,CAAWtD,UAAU,WAAWG,MAAO,CAACW,gBAAgB,WAAYyC,MAAM,QAA1E,sBACA,cAACD,EAAA,EAAD,CAAWtD,UAAU,YAAYG,MAAO,CAACW,gBAAgB,WAAYyC,MAAM,QAA3E,yBAIJ,cAACC,EAAA,EAAD,CAAWxD,UAAU,aAArB,SAEK2B,EAAU8B,KAAI,SAACC,EAAOC,GAAR,OACX,eAACN,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWN,UAAU,KAAKY,MAAM,SAASzD,MAAO,CAACC,MAAM,IAAvD,SAA6DsD,EAAOG,QACpE,cAACP,EAAA,EAAD,CAAWnD,MAAO,CAACC,MAAM,WAAYmD,MAAM,QAA3C,SAAoDG,EAAOlD,SAC3D,cAAC8C,EAAA,EAAD,CAAWnD,MAAO,CAACC,MAAM,WAAYmD,MAAM,QAA3C,SAAoDG,EAAOd,YAC3D,cAACU,EAAA,EAAD,CAAWnD,MAAO,CAACC,MAAM,WAAYmD,MAAM,QAA3C,SAAoDG,EAAOnD,YAC3D,cAAC+C,EAAA,EAAD,CAAWnD,MAAO,CAACC,MAAM,WAAYmD,MAAM,QAA3C,SAAoDG,EAAOpD,WALhDqD,0BCxExDG,EATH,WACR,OACI,qBAAK9D,UAAU,MAAf,SACI,cAAC,EAAD,OCIG+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,iBCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,IAAD,UAEG,cAAC,EAAD,QAOHC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.103a4a2d.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/Cards.css'\r\nimport { Grid, Paper } from '@material-ui/core'\r\n\r\nconst Cards = (props) => {\r\n    return (\r\n        <Grid container spacing={1} direction=\"row\" justify=\"center\" alignItems=\"center\">\r\n\r\n            <Grid  item xs spacing={3} className=\"grid-item\" >\r\n                <Paper className=\"cards card-confirm p-3\" elevation={3} >\r\n                    <p className=\"text-black-50\" >Confirmed</p>\r\n                    <h2 style={{color:'#03a9f4'}}>{props.confirm}</h2>\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid  item xs spacing={3}>\r\n                <Paper className=\"cards card-active p-3\" elevation={3}>\r\n                    <p className=\"text-black-50\">Active</p>\r\n                    <h2 style={{color:'#f44336'}}>{props.active}</h2>\r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid  item xs spacing={3}>\r\n                <Paper className=\"cards card-recovered p-3\" elevation={3}>\r\n                <p className=\"text-black-50\">Recovered</p>\r\n                <h2 style={{color:'#4caf50'}}>{props.recovered}</h2>              \r\n                </Paper>\r\n            </Grid>\r\n\r\n            <Grid  item xs spacing={3} >\r\n                <Paper className=\"cards card-death p-3\" elevation={3}>\r\n                <p className=\"text-black-50\">Deaths</p>\r\n                <h2 style={{color:'#607d8b'}}>{props.deaths}</h2>\r\n                </Paper>\r\n            </Grid>\r\n\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\n\r\nconst Charts = (props) => {\r\n    return (\r\n        <div className=\"countrychart \">\r\n        \r\n                <Doughnut\r\n                data={{\r\n                    labels: ['Active', 'confirmed', 'death', 'recovered'],\r\n                    datasets:[{\r\n                        label:'Active',\r\n                        data:[props.active,props.confirm,props.deaths,props.recovered],\r\n                        backgroundColor:['#ff5722','#1e88e5','#9c27b0','#00c853'],\r\n                        borderColor:['#ff5722','#1e88e5','#9c27b0','#00c853'],\r\n                        \r\n                    },\r\n                    \r\n                    ]\r\n                }}\r\n            />\r\n            \r\n        \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function LinearIndeterminate() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <LinearProgress />\r\n      \r\n    </div>\r\n  );\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport './css/Home.css'\r\nimport { Paper,Grid,TableRow,TableHead,TableContainer,TableCell,TableBody,Table } from '@material-ui/core';\r\nimport Cards from './Cards';\r\nimport Charts from './Charts';\r\nimport axios from \"axios\";\r\nimport Loading from './Loading'\r\nconst baseUrl='https://api.covid19india.org/data.json';\r\n\r\nfunction Home() {\r\n\r\n    const [statedata,setStatedata]=useState([]);\r\n\r\n    const getstatedata=()=>{\r\n        axios.get(baseUrl)\r\n            .then((result)=>{\r\n                \r\n                if(result.status === 200 && result != null){\r\n                    let data=result.data.statewise;\r\n                    setStatedata(data);\r\n                    \r\n                }\r\n                else{\r\n                    return [];\r\n                }\r\n            })\r\n            .catch((error)=>{\r\n                console.error(error.massage);\r\n            })\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getstatedata();\r\n        console.log(statedata);\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"Home\">\r\n            <h4 className=\"home-title text-center\">Covid-19 India overview</h4>\r\n            {\r\n                statedata.length===0?(\r\n                    <div className=\"container\">\r\n                        <Loading/>\r\n                    </div>\r\n                    \r\n                ):(\r\n                    <div className=\"container\">\r\n                    <Grid container spacing={2} direction=\"row \" justify=\"center\" align-items=\"center\" >\r\n                        <Grid item xs={12} md={6} className=\"home_card\" >\r\n                        \r\n                            <Cards \r\n                                active={statedata[0].active} \r\n                                recovered={statedata[0].recovered} \r\n                                deaths={statedata[0].deaths} \r\n                                confirm={statedata[0].confirmed}\r\n                            /> \r\n\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6} className=\"home_countryChart\" style={{padding:50}} >\r\n                            <Charts \r\n                                active={statedata[0].active} \r\n                                recovered={statedata[0].recovered} \r\n                                deaths={statedata[0].deaths} \r\n                                confirm={statedata[0].confirmed}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container spacing={3} direction=\"row\" justify=\"center\"\r\n                            alignItems=\"center\" className=\"home_section2 mt-2 mb-2\" >\r\n\r\n                                    <Grid item xs={12} md={12} sm={12} className=\"home_statedata \">\r\n                                    <TableContainer component={Paper} className=\"table\" >\r\n                                        <Table stickyHeader className=\"\" aria-label=\"simple table\">\r\n                                            <TableHead >\r\n                                                <TableRow className=\"table-top-row\" >\r\n                                                    <TableCell className=\"row-text\" style={{backgroundColor:'#e8f5e9'}}>State</TableCell>\r\n                                                    <TableCell className=\"row-text \" style={{backgroundColor:'#b0bec5'}} align=\"right\">Death</TableCell>\r\n                                                    <TableCell className=\"row-text\" style={{backgroundColor:'#b2ebf2'}} align=\"right\">Confirmed</TableCell>\r\n                                                    <TableCell className=\"row-text\" style={{backgroundColor:'#c8e6c9'}} align=\"right\">Recoverd</TableCell>\r\n                                                    <TableCell className=\"row-text \" style={{backgroundColor:'#ffcdd2'}} align=\"right\">Active</TableCell>\r\n                                                </TableRow>\r\n                                            </TableHead>\r\n                                            \r\n                                                <TableBody className=\"table-body\">\r\n\r\n                                                    {statedata.map((object,index) => (\r\n                                                        <TableRow key={index} >\r\n                                                            <TableCell component=\"th\" scope=\"object\" style={{color:''}}>{object.state}</TableCell>\r\n                                                            <TableCell style={{color:'#263238'}} align=\"right\">{object.deaths}</TableCell>\r\n                                                            <TableCell style={{color:'#01579b'}} align=\"right\">{object.confirmed}</TableCell>\r\n                                                            <TableCell style={{color:'#1b5e20'}} align=\"right\">{object.recovered}</TableCell>\r\n                                                            <TableCell style={{color:'#b71c1c'}} align=\"right\">{object.active}</TableCell>\r\n                                                        </TableRow>\r\n                                                ))}\r\n                                                </TableBody>  \r\n                                        </Table>      \r\n                                </TableContainer>\r\n                                    </Grid>\r\n                            </Grid>\r\n                    </Grid>\r\n                    </div>\r\n                        )\r\n                    }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './App.css'\r\nimport Home from './components/Home'\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <Home/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport {BrowserRouter} from 'react-router-dom'\nReactDOM.render(\n  <React.StrictMode>\n  <BrowserRouter>\n\n     <App />\n  \n   \n\n  </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}